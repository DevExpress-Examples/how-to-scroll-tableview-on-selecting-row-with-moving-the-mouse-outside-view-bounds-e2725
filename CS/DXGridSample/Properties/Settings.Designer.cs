// Developer Express Code Central Example:
// How to scroll TableView on selecting row/cell with moving the mouse outside view bounds
// 
// This example illustrates how to add the DXGrid behavior which provides the
// capability to select rows and cells by simply moving the mouse over them with
// the mouse button pressed and auto-scrolling the view in a necessary
// direction.
// This functionality was implemented via attached behavior for DXGrid
// which encapsulates all the selection functionality. The scrolling functionality
// was implemented in a separate class named ScrollController.
// 
// You can find sample updates and versions for different programming languages here:
// http://www.devexpress.com/example=E2725

// Developer Express Code Central Example:
// How to Select Rows via the mouse
// 
// This example demonstrates how to select rows by simply moving the mouse over
// them with the mouse button pressed
// 
// You can find sample updates and versions for different programming languages here:
// http://www.devexpress.com/example=E2725

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.3074
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DXGrid_AssignComboBoxToColumn.Properties {
    
    
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.Editors.SettingsDesigner.SettingsSingleFileGenerator", "9.0.0.0")]
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        private static Settings defaultInstance = ((Settings)(global::System.Configuration.ApplicationSettingsBase.Synchronized(new Settings())));
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.SpecialSettingAttribute(global::System.Configuration.SpecialSetting.ConnectionString)]
        [global::System.Configuration.DefaultSettingValueAttribute("Provider=Microsoft.Jet.OLEDB.4.0;Data Source=|DataDirectory|\\nwind.mdb;Persist Se" +
            "curity Info=True")]
        public string nwindConnectionString {
            get {
                return ((string)(this["nwindConnectionString"]));
            }
        }
    }
}
